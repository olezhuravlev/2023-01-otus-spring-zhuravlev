version: "1.0.0"
services:
  docker-hoster:
    image: dvdarias/docker-hoster
    container_name: docker-hoster
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - /etc/hosts:/tmp/hosts
  mongodb:
    image: mongo:6.0.5
    container_name: mongodb
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh localhost:27017 --quiet
      interval: 5s
      timeout: 5s
      start_period: 5s
      retries: 3
    depends_on:
      - docker-hoster
    volumes:
      - ./initdb/data:/initdb/data
      - ./initdb/mongoimport.sh:/docker-entrypoint-initdb.d/mongoimport.sh:ro
  postgres:
    image: postgres:15.3
    container_name: postgres
    environment:
      POSTGRES_USER: librarydb
      POSTGRES_PASSWORD: librarydb
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    depends_on:
      - docker-hoster
  pgadmin:
    image: dpage/pgadmin4:7.1
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: olezhuravlev@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - 8081:80
    depends_on:
      postgres:
        condition: service_healthy
  webapp-pg:
    image: olezhuravlev/webapp-pg:3.2.0
    container_name: webapp-pg
    #    ports:
    #      - 8080:8080
    network_mode: host
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:8080" ]
      interval: 5s
      timeout: 15s
      retries: 3
      start_period: 60s
#  prometheus:
#    image: prom/prometheus:v2.44.0 # has 'wget' utility
#    container_name: prometheus
#    ports:
#      - 9090:9090
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#    extra_hosts:
#      - 'host.docker.internal:host-gateway'
#    depends_on:
#      webapp-pg:
#        condition: service_healthy
#    healthcheck:
#      test: [ "CMD", "wget", "-O", "index.html", "http://localhost:9090" ]
#      interval: 5s
#      timeout: 15s
#      retries: 3
#      start_period: 60s
