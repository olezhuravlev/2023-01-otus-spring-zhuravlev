application:
  locale: ru_RU
  empty-item-id: -1

spring:
  mvc:
    throw-exception-if-no-handler-found: true
  datasource:
    url: jdbc:postgresql://postgres:5432/librarydb
    username: librarydb
    password: librarydb
    driver-class-name: org.postgresql.Driver
  sql:
    init:
      mode: always
      data-locations:
        - classpath:db_init/acl_schema.sql
        - classpath:db_init/acl_permissions.sql
        - classpath:db_init/users.sql
        - classpath:db_init/genres.sql
        - classpath:db_init/authors.sql
        - classpath:db_init/books.sql
        - classpath:db_init/book_comments.sql
        - classpath:db_init/sequences.sql
  jpa:
    properties: # Passed on to the JPA implementation.
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: true
        format_sql: true
        hbm2ddl:
          auto: create-drop
    defer-datasource-initialization: true
  jmx:
    enabled: true
  output:
    ansi:
      enabled: always
#  data:
#    rest:
#      base-path: "/some-path" # Alternative path for Spring Data Rest.
logging:
  level:
    ROOT: debug
    org.springframework.web: debug
    org.springframework.security: debug
    org.springframework.orm.hibernate5: debug
  file:
    name: webapp-logs/my-log.log
  logback:
    rollingpolicy:
      max-file-size: 100KB
      clean-history-on-start: true
      total-size-cap: 1MB
      file-name-pattern: ${LOG_FILE}.%d{yyyy-MM-dd-hh:mm:ss}.%i.gz

springdoc:
  swagger-ui:
    disable-swagger-default-url: true
    path: swag

management:
  endpoints:
    web:
      exposure:
        include: "*"
      #base-path: # path to Spring Actuator. Default is "/actuator".
    enabled-by-default: true
  endpoint:
    health:
      show-details: always
      enabled: true
      show-components: always
      probes:
        enabled: true
        add-additional-paths: true
      group:
        custom:
          include:
            - diskSpace,ping
    prometheus:
      enabled: true
  health:
    defaults:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true

server:
  port: 8080
